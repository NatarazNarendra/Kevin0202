Internally SET store element using HASHTABLE ...HASHTABLE is a structure of Key value pairs..
Here what the values passed by the SET is treated as Keys of HASHTABLE Internally.
keys are unique cannot be duplicated. 
That is the reason if you pass any duplicate value it return false and does not added to the SET ...



The meaning of "sets do not allow duplicate values" is that when you add a duplicate to a set, 
the duplicate is ignored, and the set remains unchanged. This does not lead to compile or runtime errors:
duplicates are silently ignored.



// Java program to demonstrate working of HashSet 
import java.util.*; 

class Test 
{ 
	public static void main(String[]args) 
	{ 
		HashSet<String> h = new HashSet<String>(); 

		// Adding elements into HashSet usind add() 
		h.add("India"); 
		h.add("Australia"); 
		h.add("South Africa"); 
		h.add("India");// adding duplicate elements 

		// Displaying the HashSet 
		System.out.println(h); 
		System.out.println("List contains India or not:" + 
						h.contains("India")); 

		// Removing items from HashSet using remove() 
		h.remove("Australia"); 
		System.out.println("List after removing Australia:"+h); 

		// Iterating over hash set items 
		System.out.println("Iterating over list:"); 
		Iterator<String> i = h.iterator(); 
		while (i.hasNext()) 
			System.out.println(i.next()); 
	} 
} 
